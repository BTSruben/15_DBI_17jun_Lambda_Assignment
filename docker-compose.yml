version: '3'

services:
    spark:
        build: spark_docker
        container_name: spark
        expose:
            - 4040
        ports:
            - 4040:4040
        environment:
            SPARK_PUBLIC_DNS: spark
        networks:
            - lampda-network
            - hadoop

    zookeeper:
        image: wurstmeister/zookeeper
        ports:
            - "2181:2181"
        container_name: zookeeper
        networks:
            - lampda-network

    kafka:
        image: wurstmeister/kafka:0.10.0.0
        container_name: kafka
        ports:
            - "9092:9092"
        environment:
            KAFKA_ADVERTISED_HOST_NAME: kafka
            KAFKA_ADVERTISED_PORT: 9092
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://${PUBLIC_NAME}:9092"
            KAFKA_CREATE_TOPICS: "Topic1:1:1,Topic2:1:1"
        networks:
            - lampda-network
    sensor:
        build: sensor_docker
        hostname: sensor
        container_name: sensor
        tty: true
        networks:
            - lampda-network

    namenode:
      image: swapnillinux/cloudera-hadoop-namenode
      hostname: namenode
      container_name: namenode
      ports:
        - "8020:8020"
      networks:
        - hadoop

    yarnmaster:
      image: swapnillinux/cloudera-hadoop-yarnmaster
      hostname: yarnmaster
      container_name: yarnmaster
      ports:
        - "8032:8032"
        - "8088:8088"
      networks:
        - hadoop

    datanode:
      image: swapnillinux/cloudera-hadoop-datanode
      hostname: datanode
      container_name: datanode
      links:
        - namenode
        - yarnmaster
      networks:
        - hadoop

    datanode2:
      image: swapnillinux/cloudera-hadoop-datanode
      hostname: datanode2
      container_name: datanode2
      links:
        - namenode
        - yarnmaster
      networks:
        - hadoop

networks:
    lampda-network:
        driver: bridge
    hadoop:
        driver: bridge
